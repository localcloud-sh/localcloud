# .github/workflows/release.yml

name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run tests
        run: go test ./...

      - name: Build release binaries
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "Building version $VERSION"
          chmod +x scripts/build.sh
          VERSION=$VERSION ./scripts/build.sh

      - name: Generate changelog
        run: |
          echo "## What's Changed" > CHANGELOG.md
          git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s" >> CHANGELOG.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.tar.gz
            dist/*.zip
            dist/checksums.txt
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-homebrew:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Homebrew Update
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          repository: localcloud-sh/homebrew-tap
          event-type: update-formula
          client-payload: '{"version": "${{ github.ref_name }}"}'

  update-website:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout website repository
        uses: actions/checkout@v4
        with:
          repository: localcloud-sh/localcloud-website
          token: ${{ secrets.GITHUB_TOKEN }}
          path: website
      
      - name: Update version references
        run: |
          cd website
          VERSION="${{ github.ref_name }}"
          echo "Checking for version references to update to $VERSION"
          
          # The PowerShell script auto-detects latest version, so no changes needed
          # Future: Could update any hardcoded version references in HTML/docs
          echo "All scripts use dynamic version detection - no updates needed"
      
      - name: Commit and push website updates
        run: |
          cd website
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # Only commit if there are changes
          if ! git diff --quiet; then
            git add .
            git commit -m "Auto-update for release ${{ github.ref_name }}"
            git push
          else
            echo "No website changes to commit"
          fi